import Image from "next/image";
import styles from "../styles/Login.module.css";
import MailIcon from "@mui/icons-material/Mail";
import LockIcon from "@mui/icons-material/Lock";
import Link from 'next/link';
import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import {useRouter} from 'next/navigation';
import CustomAlert from "@/components/CustomAlert";
import { useAppContext } from "@/context/AppContext";
import ClipLoader from "react-spinners/ClipLoader";

export default function Login() {

  const {push} = useRouter();

  const {alert, setAlert} = useAppContext();

  const [isLogin, setIsLogin] = useState(false);

  const [loginDetails, setLoginDetails] = useState({
    email: "",
    password: "",
  })

  const submitHandler = async (e) => {
    e.preventDefault()
    try {
      if(loginDetails.email && loginDetails.password){
        const response = await axios.post(
        "http://localhost:5000/api/v1/auth/login",
        { email: loginDetails.email, password: loginDetails.password }
      );
      localStorage.setItem("token", response.data.token)
      setIsLogin(true);
      push('/')
      }
      else{
        setAlert({status: true, message: "Please enter email and password"})
      }

    } catch (error) {
      setAlert({status: true, message: error.response.data})
      console.log(error);
    }
  }

  return (
    <>
      <Head>
        <title>Fresh Cart</title>
        <link rel="icon" href="/images/logo.jpeg" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div className={styles.container}>
        <div className={styles.imageContainer}>
          <Image
            className={styles.image}
            src="/images/login screen image.png"
            width={500}
            height={500}
            alt="login screen image"
          />
        </div>

        <div className={styles.loginContainer}>
          <Link href={'/'} className={styles.logoContainer}>
            <Image
              src="/images/logo bg removed.png"
              className={styles.logo}
              width={100}
              height={100}
              alt="logo"
            />
          </Link>

          <form className={styles.loginDetails} onSubmit={submitHandler}>
            <h1 className={styles.title}>Welcome to Fresh Cart.</h1>

            <div className={styles.emailContainer}>
              <label className={styles.labels} htmlFor="email">
                Email
              </label>
              <div className={styles.emailInputContainer}>
                <input
                  className={styles.inputs}
                  type="email"
                  name="email"
                  placeholder="Enter your Email"
                  value={loginDetails.email}
                  onChange={(e) =>
                    setLoginDetails({...loginDetails, email: e.target.value })
                  }
                />

                <MailIcon className={styles.icons} />
              </div>
            </div>

            <div className={styles.passwordContainer}>
              <label className={styles.labels} htmlFor="password">
                Password
              </label>
              <div className={styles.passwordInputContainer}>
                <input
                  className={styles.inputs}
                  type="password"
                  name="password"
                  placeholder="Enter your password"
                  value={loginDetails.password}
                  onChange={(e) =>
                    setLoginDetails({...loginDetails, password: e.target.value })
                  }
                />

                <LockIcon className={styles.icons} />
              </div>
            </div>

            {/* <div className={styles.forgetPassword}>
              <p>Forgot password?</p>
            </div> */}

            <button type="submit" className={styles.loginBtn} href="/">
              {isLogin ? <ClipLoader color = "white"/> : "Login"}
            </button>
          </form>

          <div className={styles.signupContainer}>
            <p>Don't have an accont?</p>
            <Link href="/signup" className={styles.signupBtn}>
              Signup
            </Link>
          </div>
        </div>
      </div>
      {alert?.status && <CustomAlert />}
    </>
  );
}

Login.NoLayout = true;
